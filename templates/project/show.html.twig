{# templates/project/show.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Projects{% endblock %}

{% block body %}

    <section id="poject" class="container vh-100 text-light">
        
        <h1 class="py-4">{{ project.title }}</h1>

        <div class="row align-items-center mb-4">
            <div class="col-3">
                <p class="m-0 p-0"><span class="fw-bold">Start Date: </span>{{ project.startDate|date("Y-m-d") }}</p>
                <p class="m-0 p-0"><span class="fw-bold">End Date: </span>{{ project.endDate|date("Y-m-d") }}</p>
            </div>
            <div class="col">
                <div class="progress">
                    {% if progress == 0 %}
                        {% set width = 100 %}
                        {% set text = 'No task completed' %}
                        {% set color = '#e5e5e5' %}
                    {% else %}
                        {% set width = progress %}
                        {% set text = progress ~ '%' %}
                        {% set color = project.color %}
                    {% endif %}
                    <div class="progress-bar" role="progressbar" style="width: {{ width }}%; background-color: {{ color }};" aria-valuenow="{{ progress }}" aria-valuemin="0" aria-valuemax="100">{{ text }}</div>
                </div>
            </div>
        </div>

        <div class="mb-4">
            <h2>Project description</h2>
            <p>{{ project.description }}</p>
        </div>

        {%if project.getTasks() is empty %}

            <div class="d-flex justify-content-end">
                <a href="{{ path('create_task', {'id': project.id}) }}" class="btn primary">Add a task</a>
            </div>

        {% else %}
        
            <div class="mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>Current sprint</h2>
                    <a href="{{ path('create_task', {'id': project.id}) }}" class="btn primary mb-4">Add a task</a>
                </div>

                {% set sprint_tasks = project.getTasks()|filter(task => task.status == 'sprint') %}
            
                <ul id="sprint" class="task-list" ondrop="drop(event, 'sprint')" ondragover="allowDrop(event)">
                    {% for task in sprint_tasks %}
                    <li class="task-item d-flex align-items-center" id="task-{{ task.id }}" draggable="true" ondragstart="drag(event)">

                        <div class="dropdown">
                            <button class="badge rounded-pill me-4 dropdown-toggle {{ task.progressState }}" type="button" id="dropdownProgressState" data-bs-toggle="dropdown" aria-expanded="false">
                                {{ task.progressState|capitalize }}
                            </button>
                            <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownProgressState">
                                {% for state in ['pending', 'ongoing', 'done', 'ko'] %}
                                    <li class="dropdown-item progressState-item">{{ state|capitalize }}</li>
                                {% endfor %}
                            </ul>
                        </div>

                        <p class="h4 m-0 me-2">{{ task.title }}</p>
                        <div class="ms-auto d-flex justify-content-center align-items-center">
                            <p class="m-0 me-2">Responsible:  </p>
                            <img 
                            src="{{ asset(app.user.profileImage ? 'uploads/' ~ app.user.profileImage : 'images/default-avatar.png') }}" 
                            data-bs-toggle="tooltip" 
                            data-bs-placement="top" 
                            title="{{ task.responsibleMember.name }}"
                            class="avatar" 
                            width="45" height="45">
                        </div>
                        

                        <div class="ms-auto d-flex align-items-center">
                            {% if task.priority %}
                                <span class="material-symbols-outlined priority mx-2">
                                    report
                                </span>
                            {% endif %}
                            <button class="btn btn-link archive-btn {% if task.progressState != 'done' %}d-none{% endif %}">Archive</button>
                            <button class="btn btn-sm tertiary" 
                                type="button" 
                                data-bs-toggle="offcanvas" 
                                data-bs-target="#taskDetailsOffcanvas"
                                data-title="{{ task.title }}"
                                data-task-id="{{ task.id }}"
                                data-description="{{ task.description }}"
                                {% if task.priority %}
                                    data-priority="Hight"
                                {% else %}
                                    data-priority="Normal"
                                {% endif %}
                                data-responsible="{{ task.responsibleMember.id }}"
                                >
                                Details
                            </button>
                        </div>
                            
                    </li>
                    {% endfor %}
                </ul>
            </div>
        
            <div class="mb-4">
                <h2>Backlog</h2>
            
                {% set backlog_tasks = project.getTasks()|filter(task => task.status == 'backlog') %}
            
                <ul id="backlog" class="task-list drop-list" ondrop="drop(event, 'backlog')" ondragover="allowDrop(event)">
                    {% for task in backlog_tasks %}
                    <li class="task-item d-flex align-items-center" id="task-{{ task.id }}" draggable="true" ondragstart="drag(event)">

                        <div class="dropdown">
                            <button class="badge rounded-pill me-4 dropdown-toggle {{ task.progressState }}" type="button" id="dropdownProgressState" data-bs-toggle="dropdown" aria-expanded="false">
                                {{ task.progressState|capitalize }}
                            </button>
                            <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownProgressState">
                                {% for state in ['pending', 'ongoing', 'done', 'ko'] %}
                                    <li class="dropdown-item progressState-item">{{ state|capitalize }}</li>
                                {% endfor %}
                            </ul>
                        </div>

                        <p class="h4 m-0 me-2">{{ task.title }}</p>
                        {% if task.priority %}
                            <span class="material-symbols-outlined priority">
                                report
                            </span>
                        {% endif %}
                        <div class="ms-auto">
                            <button class="btn btn-link archive-btn {% if task.progressState != 'done' %}d-none{% endif %}">Archive</button>
                            <button class="btn btn-sm tertiary" 
                                type="button" 
                                data-bs-toggle="offcanvas" 
                                data-bs-target="#taskDetailsOffcanvas"
                                data-title="{{ task.title }}"
                                data-task-id="{{ task.id }}"
                                data-description="{{ task.description }}"
                                {% if task.priority %}
                                    data-priority="Hight"
                                {% else %}
                                    data-priority="Normal"
                                {% endif %}
                                data-responsible="{{ task.responsibleMember.id }}"
                                >
                                Details
                            </button>
                        </div>
                    </li>
                    {% endfor %}
                </ul>

            </div>

            <div class="offcanvas offcanvas-end" tabindex="-1" id="taskDetailsOffcanvas" aria-labelledby="taskDetailsLabel">
                <div class="offcanvas-header">
                    <h3><span id="taskTitle" class="text-bold"></span></h3>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <p><strong>Description:</strong> <span id="taskDescription"></span></p>
                    <p><strong>Priority:</strong> <span id="taskPriority"></span></p>
                    <p><strong>Responsible:</strong>
                        <input id="taskId" type="hidden" value="">
                        <select id="taskResponsible" class="form-control mt-2">
                            <option value="" disabled selected>Choose a member</option>
                            {% for user in users %}
                                <option value="{{ user.id }}">{{ user.name }}</option>
                            {% endfor %}
                        </select>
                    </p>
                </div>
                
            </div>
            
        
        {% endif %}
        

    </section>
    
    <script>
        function allowDrop(event) {
            event.preventDefault();
        }

        function drag(event) {
            event.dataTransfer.setData("text", event.target.id);
        }

        function drop(event, newStatus) {
            event.preventDefault();
            var taskId = event.dataTransfer.getData("text");
            var taskElement = document.getElementById(taskId);

            event.target.appendChild(taskElement);

            updateTaskStatus(taskId, newStatus);
        }

        function updateTaskStatus(taskId, newStatus) {
            fetch('api/update-task-status/' + taskId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ status: newStatus })
            }).then(response => response.json())
                .then(data => console.log("Status updated:", data))
                .catch(error => console.error("Error updating task:", error));
        }

    </script>

{% endblock %}